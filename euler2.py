#!/usr/bin/python
# Each new term in the Fibonacci sequence is generated by adding the previous 
# two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not 
# exceed four million, find the sum of the even-valued terms.

from util import chronometer

def fibonacci():
	n1, n2 = 0, 1
	while True:
		yield n1
		n1, n2 = n2, n1 + n2

@chronometer	
def problem_2():
	total_sum = 0
	f = fibonacci()
	exceed_four_million = False
	while not exceed_four_million:
		next_number = f.next()
		if next_number > 4000000:
			exceed_four_million = True
		else:
			if next_number % 2 != 0:
				total_sum += next_number
	return total_sum
	
print problem_2()